// Generated by Dagger (https://google.github.io/dagger).
package com.komandor.komandor.ui.auth.registration;

import com.komandor.komandor.App;
import com.komandor.komandor.data.api.KomandorAPI;
import com.komandor.komandor.data.temporary.TemporaryStorage;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class RegistrationViewModel_Factory implements Factory<RegistrationViewModel> {
  private final Provider<RegistrationRepository> registrationRepositoryProvider;

  private final Provider<KomandorAPI> komandorAPIProvider;

  private final Provider<TemporaryStorage> temporaryStorageProvider;

  private final Provider<App> appProvider;

  public RegistrationViewModel_Factory(
      Provider<RegistrationRepository> registrationRepositoryProvider,
      Provider<KomandorAPI> komandorAPIProvider,
      Provider<TemporaryStorage> temporaryStorageProvider,
      Provider<App> appProvider) {
    this.registrationRepositoryProvider = registrationRepositoryProvider;
    this.komandorAPIProvider = komandorAPIProvider;
    this.temporaryStorageProvider = temporaryStorageProvider;
    this.appProvider = appProvider;
  }

  @Override
  public RegistrationViewModel get() {
    return new RegistrationViewModel(
        registrationRepositoryProvider.get(),
        komandorAPIProvider.get(),
        temporaryStorageProvider.get(),
        appProvider.get());
  }

  public static RegistrationViewModel_Factory create(
      Provider<RegistrationRepository> registrationRepositoryProvider,
      Provider<KomandorAPI> komandorAPIProvider,
      Provider<TemporaryStorage> temporaryStorageProvider,
      Provider<App> appProvider) {
    return new RegistrationViewModel_Factory(
        registrationRepositoryProvider, komandorAPIProvider, temporaryStorageProvider, appProvider);
  }

  public static RegistrationViewModel newRegistrationViewModel(
      RegistrationRepository registrationRepository,
      KomandorAPI komandorAPI,
      TemporaryStorage temporaryStorage,
      App app) {
    return new RegistrationViewModel(registrationRepository, komandorAPI, temporaryStorage, app);
  }
}
