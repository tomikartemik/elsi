// Generated by Dagger (https://google.github.io/dagger).
package com.komandor.komandor.di;

import com.komandor.komandor.App;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModule_ProvideAppFactory implements Factory<App> {
  private final AppModule module;

  public AppModule_ProvideAppFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public App get() {
    return proxyProvideApp(module);
  }

  public static AppModule_ProvideAppFactory create(AppModule module) {
    return new AppModule_ProvideAppFactory(module);
  }

  public static App proxyProvideApp(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.provideApp(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
