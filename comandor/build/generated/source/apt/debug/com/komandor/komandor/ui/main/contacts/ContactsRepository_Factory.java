// Generated by Dagger (https://google.github.io/dagger).
package com.komandor.komandor.ui.main.contacts;

import android.content.Context;
import com.komandor.komandor.data.api.KomandorAPI;
import com.komandor.komandor.data.database.contacts.ContactsStorage;
import com.komandor.komandor.data.temporary.TemporaryStorage;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class ContactsRepository_Factory implements Factory<ContactsRepository> {
  private final Provider<ContactsStorage> contactsStorageProvider;

  private final Provider<Context> applicationContextProvider;

  private final Provider<TemporaryStorage> temporaryStorageProvider;

  private final Provider<KomandorAPI> komandorAPIProvider;

  public ContactsRepository_Factory(
      Provider<ContactsStorage> contactsStorageProvider,
      Provider<Context> applicationContextProvider,
      Provider<TemporaryStorage> temporaryStorageProvider,
      Provider<KomandorAPI> komandorAPIProvider) {
    this.contactsStorageProvider = contactsStorageProvider;
    this.applicationContextProvider = applicationContextProvider;
    this.temporaryStorageProvider = temporaryStorageProvider;
    this.komandorAPIProvider = komandorAPIProvider;
  }

  @Override
  public ContactsRepository get() {
    return new ContactsRepository(
        contactsStorageProvider.get(),
        applicationContextProvider.get(),
        temporaryStorageProvider.get(),
        komandorAPIProvider.get());
  }

  public static ContactsRepository_Factory create(
      Provider<ContactsStorage> contactsStorageProvider,
      Provider<Context> applicationContextProvider,
      Provider<TemporaryStorage> temporaryStorageProvider,
      Provider<KomandorAPI> komandorAPIProvider) {
    return new ContactsRepository_Factory(
        contactsStorageProvider,
        applicationContextProvider,
        temporaryStorageProvider,
        komandorAPIProvider);
  }

  public static ContactsRepository newContactsRepository(
      ContactsStorage contactsStorage,
      Context applicationContext,
      TemporaryStorage temporaryStorage,
      KomandorAPI komandorAPI) {
    return new ContactsRepository(
        contactsStorage, applicationContext, temporaryStorage, komandorAPI);
  }
}
