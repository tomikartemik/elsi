// Generated by Dagger (https://google.github.io/dagger).
package com.komandor.komandor.data.database.contacts;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ContactsStorage_Factory implements Factory<ContactsStorage> {
  private final Provider<ContactDao> contactDaoProvider;

  private final Provider<ContactsCertificatesDao> contactsCertificatesDaoProvider;

  public ContactsStorage_Factory(
      Provider<ContactDao> contactDaoProvider,
      Provider<ContactsCertificatesDao> contactsCertificatesDaoProvider) {
    this.contactDaoProvider = contactDaoProvider;
    this.contactsCertificatesDaoProvider = contactsCertificatesDaoProvider;
  }

  @Override
  public ContactsStorage get() {
    return new ContactsStorage(contactDaoProvider.get(), contactsCertificatesDaoProvider.get());
  }

  public static ContactsStorage_Factory create(
      Provider<ContactDao> contactDaoProvider,
      Provider<ContactsCertificatesDao> contactsCertificatesDaoProvider) {
    return new ContactsStorage_Factory(contactDaoProvider, contactsCertificatesDaoProvider);
  }

  public static ContactsStorage newContactsStorage(
      ContactDao contactDao, ContactsCertificatesDao contactsCertificatesDao) {
    return new ContactsStorage(contactDao, contactsCertificatesDao);
  }
}
