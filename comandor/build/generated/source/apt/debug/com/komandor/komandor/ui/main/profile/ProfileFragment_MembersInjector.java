// Generated by Dagger (https://google.github.io/dagger).
package com.komandor.komandor.ui.main.profile;

import com.komandor.komandor.viewmodel.ViewModelFactory;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class ProfileFragment_MembersInjector implements MembersInjector<ProfileFragment> {
  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  public ProfileFragment_MembersInjector(Provider<ViewModelFactory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<ProfileFragment> create(
      Provider<ViewModelFactory> viewModelFactoryProvider) {
    return new ProfileFragment_MembersInjector(viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(ProfileFragment instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  public static void injectViewModelFactory(
      ProfileFragment instance, ViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
