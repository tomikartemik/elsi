// Generated by Dagger (https://google.github.io/dagger).
package com.komandor.komandor.ui.auth.cert_validation;

import com.komandor.komandor.data.temporary.CryptoStorage;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class CertValidationViewModel_Factory implements Factory<CertValidationViewModel> {
  private final Provider<CertValidationRepository> certValidationRepositoryProvider;

  private final Provider<CryptoStorage> cryptoStorageProvider;

  public CertValidationViewModel_Factory(
      Provider<CertValidationRepository> certValidationRepositoryProvider,
      Provider<CryptoStorage> cryptoStorageProvider) {
    this.certValidationRepositoryProvider = certValidationRepositoryProvider;
    this.cryptoStorageProvider = cryptoStorageProvider;
  }

  @Override
  public CertValidationViewModel get() {
    return new CertValidationViewModel(
        certValidationRepositoryProvider.get(), cryptoStorageProvider.get());
  }

  public static CertValidationViewModel_Factory create(
      Provider<CertValidationRepository> certValidationRepositoryProvider,
      Provider<CryptoStorage> cryptoStorageProvider) {
    return new CertValidationViewModel_Factory(
        certValidationRepositoryProvider, cryptoStorageProvider);
  }

  public static CertValidationViewModel newCertValidationViewModel(
      CertValidationRepository certValidationRepository, CryptoStorage cryptoStorage) {
    return new CertValidationViewModel(certValidationRepository, cryptoStorage);
  }
}
