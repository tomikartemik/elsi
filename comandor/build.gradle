apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "androidx.navigation.safeargs.kotlin"

apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-parcelize'

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 32
    defaultConfig {
        applicationId "com.komandor.komandor"

        minSdkVersion 24
        targetSdkVersion 32
        versionCode 1
        versionName "1.06"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_URL", '"https://api.komandor.app"'
        buildConfigField "String", "HOST_NAME", '"api.komandor.app"'

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        devDebug {
            dimension "default"
            buildConfigField "String", "API_URL", '"https://api.komandor.app"'
            buildConfigField "String", "HOST_NAME", '"api.komandor.app"'
        }

        prodDebug {
            dimension "default"
            applicationId "com.komandor.komandor"

            //resValue "string", "app_uuid", '84c99cdf-dab1-4878-8fdd-e0ab63fe205b'
        }

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                def SEP = "_"
                def flavor = variant.productFlavors[0].name
                def buildType = variant.buildType.name
                def version = variant.versionName
                def versionCode = variant.versionCode
                def date = new Date()
                def formattedDate = date.format('dd-MM-yyyy-HH_mm')
                outputFileName = "${flavor}${SEP}${buildType}${SEP}${version}${SEP}${versionCode}${SEP}${formattedDate}.apk"
            }

        }
    }

    buildFeatures {
        viewBinding = true
    }

    packagingOptions {
        exclude 'META-INF/Digest.CP'
        exclude 'META-INF/Sign.CP'

        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }




}

dependencies {

    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs', include: ['*.aar'])

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0")

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    def okhttp_version = "4.8.0"

    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    def retrofit_version = "2.9.0"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

    api('io.socket:socket.io-client:1.0.0') {
        exclude group: 'org.json', module: 'json'
    }

    implementation 'com.squareup.picasso:picasso:2.71828'

/*
    implementation "androidx.room:room-runtime:2.5.0-alpha01"
    annotationProcessor "androidx.room:room-compiler:2.5.0-alpha01"
    implementation "androidx.room:room-rxjava2:2.5.0-alpha01"

 */
    def roomVersion = '2.5.0-alpha01'

    implementation("androidx.room:room-runtime:$roomVersion")
    annotationProcessor("androidx.room:room-compiler:$roomVersion")
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation("androidx.room:room-ktx:$roomVersion")

    testImplementation("androidx.room:room-testing:$roomVersion")

    implementation('androidx.room:room-paging:2.4.2')

    implementation 'androidx.paging:paging-runtime:3.1.1'
    implementation 'androidx.paging:paging-rxjava2:3.1.1'

    //implementation 'com.google.firebase:firebase-core:20.1.0'
    //implementation 'com.crashlytics.sdk.android:crashlytics:17.2.2'
    implementation platform('com.google.firebase:firebase-bom:29.2.1')
    // временно
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    // Firebase Cloud Messaging (Kotlin)
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // For an optimal experience using FCM, add the Firebase SDK
    // for Google Analytics. This is recommended, but not required.
    implementation 'com.google.firebase:firebase-analytics'

    implementation 'com.google.firebase:firebase-installations-ktx:17.0.1'

    implementation 'androidx.work:work-runtime:2.7.1'

    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation "org.bouncycastle:bcprov-jdk15on:$rootProject.bouncycastleVersion"
    implementation "org.bouncycastle:bcpkix-jdk15on:$rootProject.bouncycastleVersion"
    implementation "org.apache.santuario:xmlsec:$rootProject.xmlsecVersion"
    implementation "org.ini4j:ini4j:$rootProject.ini4jVersion"


    implementation("com.google.dagger:hilt-android:2.38.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")

    def nav_version = '2.4.2'
    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")

    implementation 'io.github.centrifugal:centrifuge-java:0.1.0'
    // Phone mask
    implementation 'com.redmadrobot:input-mask-android:5.0.0'
    // Testing Navigation
    androidTestImplementation("io.github.centrifugal:centrifuge-java:0.1.0")

    // Jetpack Compose Integration
    // implementation("androidx.navigation:navigation-compose:$nav_version")


    //debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'
}
// Allow references to generated code
kapt {
    correctErrorTypes = true
}
